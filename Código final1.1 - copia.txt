import telebot 
from telebot import types
import logging

# Configurar logs para reducir mensajes en la terminal
logging.basicConfig(level=logging.CRITICAL)

# Conexi√≥n con nuestro BOT
TOKEN = '7567218231:AAF15mvlHY_8WDEQhPeLQeUjOzhLxAEnMvs'  
bot = telebot.TeleBot(TOKEN)  

# Creaci√≥n de comandos simples como '/Start' y '/Help' 
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, 'üéì Bienvenido al Bot de Pensum de la Universidad de Oriente üìñ\n\nHola! Soy tu asistente para obtener informaci√≥n sobre los pensum de diferentes carreras universitarias.')

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """ü§ñ *Ayuda - Comandos disponibles* üìå

*/start* ‚Üí Inicia el bot y recibe un mensaje de bienvenida.  
*/help* ‚Üí Muestra esta lista de comandos y c√≥mo usarlos.  
*/pensum* ‚Üí Selecciona tu carrera y recibe el pensum en PDF.  

üì© Escr√≠beme y te asistir√© con cualquier duda. üöÄ"""
    
    bot.send_message(message.chat.id, help_text, parse_mode="Markdown")

# Men√∫ de selecci√≥n de carrera
@bot.message_handler(commands=['pensum'])
def send_career_menu(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)

    carreras = [
        "Ingenier√≠a Civil", "Ingenier√≠a de Petr√≥leo", "Ingenier√≠a de Sistemas",
        "Ingenier√≠a El√©ctrica", "Ingenier√≠a en Computaci√≥n", "Ingenier√≠a Industrial",
        "Ingenier√≠a Mec√°nica", "Ingenier√≠a Qu√≠mica", "Arquitectura", "Medicina",
        "Contadur√≠a P√∫blica", "Turismo", "Tecnolog√≠a en Fabricaci√≥n Mec√°nica",
        "Tecnolog√≠a Electr√≥nica", "Administraci√≥n de Empresas"
    ]

    for carrera in carreras:
        markup.add(types.KeyboardButton(carrera))

    bot.send_message(message.chat.id, "Selecciona tu carrera:", reply_markup=markup)

# Diccionario con descripciones breves de cada carrera
descripciones_carreras = {
    "Ingenier√≠a Civil": "Dise√±o y construcci√≥n de infraestructuras como edificios y puentes.",
    "Ingenier√≠a de Petr√≥leo": "Exploraci√≥n y extracci√≥n de hidrocarburos para la producci√≥n de energ√≠a.",
    "Ingenier√≠a de Sistemas": "Desarrollo de software, estructura de datos y tecnolog√≠a inform√°tica.",
    "Ingenier√≠a El√©ctrica": "Estudio y aplicaci√≥n de sistemas el√©ctricos y generaci√≥n de energ√≠a.",
    "Ingenier√≠a en Computaci√≥n": "Dise√±o y desarrollo de hardware, redes y programaci√≥n avanzada.",
    "Ingenier√≠a Industrial": "Optimizaci√≥n de procesos y mejora de productividad en empresas.",
    "Ingenier√≠a Mec√°nica": "Dise√±o y desarrollo de maquinaria, motores y procesos mec√°nicos.",
    "Ingenier√≠a Qu√≠mica": "Aplicaci√≥n de procesos qu√≠micos en la producci√≥n industrial.",
    "Arquitectura": "Dise√±o y planificaci√≥n de espacios funcionales y est√©ticos.",
    "Medicina": "Diagn√≥stico y tratamiento de enfermedades en el √°mbito de la salud.",
    "Contadur√≠a P√∫blica": "Gesti√≥n financiera y administraci√≥n econ√≥mica en empresas.",
    "Turismo": "Planificaci√≥n y promoci√≥n de actividades tur√≠sticas.",
    "Tecnolog√≠a en Fabricaci√≥n Mec√°nica": "Procesos avanzados en manufactura y producci√≥n mec√°nica.",
    "Tecnolog√≠a Electr√≥nica": "Dise√±o y desarrollo de dispositivos electr√≥nicos.",
    "Administraci√≥n de Empresas": "Gesti√≥n de negocios, planificaci√≥n estrat√©gica y liderazgo organizacional."
}

# Diccionario con los archivos PDF correspondientes
pensums_pdf = {
    "Ingenier√≠a Civil": "pensum_civil.pdf",
    "Ingenier√≠a de Petr√≥leo": "pensum_petroleo.pdf",
    "Ingenier√≠a de Sistemas": "pensum_sistemas.pdf",
    "Ingenier√≠a El√©ctrica": "pensum_electrica.pdf",
    "Ingenier√≠a en Computaci√≥n": "pensum_computacion.pdf",
    "Ingenier√≠a Industrial": "pensum_industrial.pdf",
    "Ingenier√≠a Mec√°nica": "pensum_mecanica.pdf",
    "Ingenier√≠a Qu√≠mica": "pensum_quimica.pdf",
    "Arquitectura": "pensum_arquitectura.pdf",
    "Medicina": "pensum_medicina.pdf",
    "Contadur√≠a P√∫blica": "pensum_contaduria.pdf",
    "Turismo": "pensum_turismo.pdf",
    "Tecnolog√≠a en Fabricaci√≥n Mec√°nica": "pensum_fabricacion.pdf",
    "Tecnolog√≠a Electr√≥nica": "pensum_electronica.pdf",
    "Administraci√≥n de Empresas": "pensum_administracion.pdf"
}

# Manejo de la selecci√≥n de carrera para enviar Pensum con descripci√≥n breve y opci√≥n de solicitar m√°s informaci√≥n
@bot.message_handler(func=lambda message: message.text in descripciones_carreras.keys())
def send_selected_info_or_pensum(message):
    carrera = message.text
    descripcion = descripciones_carreras.get(carrera, "Descripci√≥n no disponible.")

    # Enviar descripci√≥n breve con la opci√≥n de solicitar m√°s detalles
    bot.send_message(message.chat.id, f"üìå *{carrera}*\n{descripcion}\n\nüîç Usa `/info_carrera {carrera}` para m√°s detalles.", parse_mode="Markdown")

    # Enviar el PDF si existe
    pdf_file = pensums_pdf.get(carrera)
    if pdf_file:
        try:
            bot.send_document(message.chat.id, open(pdf_file, "rb"))
        except FileNotFoundError:
            bot.send_message(message.chat.id, f"A√∫n no tengo el pensum de {carrera}. ¬°Pronto lo agregar√©!")

# Diccionario con informaci√≥n detallada de cada carrera
explicaciones_carreras = {
    "Ingenier√≠a Civil": """La carrera de Ingenier√≠a Civil en la Universidad de Oriente (UDO) forma profesionales para planificar, dise√±ar, construir, supervisar y mantener infraestructuras esenciales para la sociedad...""",
    "Ingenier√≠a de Petr√≥leo": """La carrera de Ingenier√≠a en Petr√≥leo en la UDO forma profesionales para planificar, dise√±ar, operar y optimizar procesos de exploraci√≥n, perforaci√≥n, producci√≥n, transporte y almacenamiento de hidrocarburos...""",
    "Ingenier√≠a de Sistemas": """La Ingenier√≠a en Sistemas abarca el desarrollo de software, estructura de datos y tecnolog√≠a inform√°tica...""",
    "Ingenier√≠a El√©ctrica": """La Ingenier√≠a El√©ctrica en la UDO forma profesionales para dise√±ar, desarrollar, operar y mantener sistemas el√©ctricos y electr√≥nicos...""",
    "Ingenier√≠a en Computaci√≥n": """La Ingenier√≠a en Computaci√≥n en la UDO forma profesionales para dise√±ar, desarrollar, implementar y mantener sistemas computacionales, abarcando hardware y software...""",
    "Ingenier√≠a Industrial": """La Ingenier√≠a Industrial en la UDO forma profesionales para dise√±ar, implementar, optimizar y gestionar sistemas productivos y de servicios...""",
    "Ingenier√≠a Mec√°nica": """La Ingenier√≠a Mec√°nica en la UDO forma profesionales para dise√±ar, desarrollar, fabricar, operar y mantener sistemas mec√°nicos en diversas industrias...""",
    "Ingenier√≠a Qu√≠mica": """La Ingenier√≠a Qu√≠mica en la UDO forma profesionales para dise√±ar, desarrollar, optimizar y operar procesos industriales que transforman materias primas en productos √∫tiles...""",
    "Arquitectura": """La Licenciatura en Arquitectura de la UDO forma profesionales para proyectar, dise√±ar, construir y gestionar espacios habitables...""",
    "Medicina": """La Licenciatura en Medicina en la UDO forma m√©dicos generales integrales con s√≥lida base cient√≠fica, human√≠stica y √©tica...""",
    "Contadur√≠a P√∫blica": """La Licenciatura en Contadur√≠a P√∫blica en la UDO forma profesionales con conocimientos en contabilidad, finanzas, tributaci√≥n y auditor√≠a...""",
    "Turismo": """La Licenciatura en Turismo de la UDO forma profesionales para planificar, gestionar, desarrollar y promover la actividad tur√≠stica...""",
    "Tecnolog√≠a en Fabricaci√≥n Mec√°nica": """El TSU en Fabricaci√≥n Mec√°nica de la UDO forma t√©cnicos capacitados para planificar, ejecutar, supervisar y controlar procesos de fabricaci√≥n de piezas mec√°nicas...""",
    "Tecnolog√≠a Electr√≥nica": """El TSU en Tecnolog√≠a Electr√≥nica de la UDO forma t√©cnicos capacitados para instalar, mantener, reparar y operar sistemas y equipos electr√≥nicos...""",
    "Administraci√≥n de Empresas": """La Licenciatura en Administraci√≥n de Empresas en la UDO forma profesionales para gestionar organizaciones de manera eficiente y eficaz..."""
}



# Explicaci√≥n detallada con el comando /info_carrera NombreDeLaCarrera
@bot.message_handler(commands=['info_carrera'])
def send_detailed_info(message):
    carrera = message.text.replace("/info_carrera ", "")
    info = "Esta carrera no tiene informaci√≥n detallada disponible por el momento."
    
    bot.send_message(message.chat.id, info, parse_mode="Markdown")

# Mantener el bot activo
if __name__ == "__main__":
    bot.polling(none_stop=True, skip_pending=True)